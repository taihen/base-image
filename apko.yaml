# This file defines a minimal, multi-arch glibc base image using apko.
# It is inspired by the principles of Google Distroless and Chainguard Images.
# For more information on apko, see: https://github.com/chainguard-dev/apko
#
# A minimal set of packages for a glibc-based "distroless" image:
#
# - wolfi-baselayout - is the basic layout of the container filesystem, sets
# up directory structure and permissions for paths, sets root password as
# * in the passwd file so that the user cannot login, sets up os-release,
# so scanners are able to identify the os and get the vulnerability db for the same.
#
# Additional packages:
#
# - ca-certificates-bundle - these are the cert chains for ssl connections
# - tzdata - is the data with which timezones are used by the OS
# - glibc - is the libc library for the OS
contents:
  repositories: ['https://packages.wolfi.dev/os']
  keyring: ['https://packages.wolfi.dev/os/wolfi-signing.rsa.pub']
  packages: [ca-certificates-bundle, tzdata, wolfi-baselayout, glibc]
environment:
  PATH: /usr/sbin:/sbin:/usr/bin:/bin
# Set up a non-root user and group, and run as that user.
# This is a critical security best practice.
accounts:
  users:
    - username: nonroot
      uid: 65532
  groups:
    - groupname: nonroot
      gid: 65532
  run-as: nonroot
# Define the supported architectures. apko will build a multi-arch manifest, but
# Wolfi supports only x86_64 and aarch64.
archs:
  - x86_64
  - aarch64
# A distroless image has no shell or entrypoint.
# The application using this base image will provide its own entrypoint.
entrypoint: {}
annotations:
  "org.opencontainers.image.authors": "taihen.build@gmail.com"
  "org.opencontainers.image.url": "https://github.com/taihen/base-image"
  "org.opencontainers.image.source": "https://github.com/taihen/base-image"
  "org.opencontainers.image.title": "Distroless glibc Base Image"
  "org.opencontainers.image.description": "A minimal, multi-arch glibc base image."
